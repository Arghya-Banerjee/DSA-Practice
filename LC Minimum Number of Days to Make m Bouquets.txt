class Solution {
public:
    bool isPossible(vector<int> arr, int d, int m, int k){
        int ans = 0;
        int count = 0;
        for(int i = 0; i < arr.size(); i++){
            if(arr[i] <= d){
                count ++;
            }
            else{
                ans += count/k;
                count = 0;
            }
        }
        ans += count/k;
        return ans >= m;
    }

    int minDays(vector<int>& bloomDay, int m, int k) {
        long long check = m * 1LL * k * 1LL;
        if(check > bloomDay.size()) return -1;
        int maxi = INT_MIN, mini = INT_MAX;
        for(int i = 0; i < bloomDay.size(); i++){
            maxi = max(maxi, bloomDay[i]);
            mini = min(mini, bloomDay[i]);
        }
        int low = mini;
        int high = maxi;
        int ans = maxi;
        while(low <= high){
            int mid = low + (high - low)/2;
            if(isPossible(bloomDay, mid, m, k)){
                ans = mid;
                high = mid - 1;
            }
            else low = mid + 1;
        }
        return ans;
    }
};
