class Solution {
  public:
  int helper(int arr[], int N, int cap){
    int ans = 1;
    int cnt = 0;
    for(int i = 0; i < N; i++){
        if(arr[i] + cnt > cap){
            ans++;
            cnt = arr[i];
        }
        else{
            cnt += arr[i];
        }
    }
    // ans += cnt/cap;
    return ans;
  }
  
    int leastWeightCapacity(int arr[], int N, int D) {
        // code here
        int maxi = INT_MIN;
        int total = 0;
        for(int i = 0; i < N; i++){
            maxi = max(maxi, arr[i]);
            total += arr[i];
        }
        int low = maxi;
        int high = total;
        while(low <= high){
            int mid = low + (high - low)/2;
            if(helper(arr, N, mid) <= D){
                high = mid - 1;
            }
            else low = mid + 1;
        }
        return low;
    }
};
