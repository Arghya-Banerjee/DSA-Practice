class Solution {
public:
    int helper(vector<int> arr, int cap){
    int ans = 1;
    int cnt = 0;
    for(int i = 0; i < arr.size(); i++){
        if(arr[i] + cnt > cap){
            ans++;
            cnt = arr[i];
        }
        else{
            cnt += arr[i];
        }
    }
    // ans += cnt/cap;
    return ans;
  }

    int shipWithinDays(vector<int>& weights, int days) {
        
        int low = *max_element(weights.begin(), weights.end());
        int high = accumulate(weights.begin(), weights.end(), 0);
        while(low <= high){
            int mid = low + (high - low)/2;
            if(helper(weights, mid) <= days){
                high = mid - 1;
            }
            else low = mid + 1;
        }
        return low;
    }
};
